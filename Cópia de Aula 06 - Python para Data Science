{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Cópia de Aula 06 - Python para Data Science","provenance":[{"file_id":"1Zk-qXN6oQBaDL2Lpkr8XpB4J2I2r0dBp","timestamp":1652666930860},{"file_id":"1T9e76hsU6wa2FT_vyNWXMMozYEI9_9-8","timestamp":1650843830572},{"file_id":"1kVB4_nAFsWxJtm6ilUJcuP5AdRpyjMPA","timestamp":1650248762623},{"file_id":"1_yvfBeU223S4sPQiBtrxKukANnL9DE71","timestamp":1649031622523},{"file_id":"1hqfMh8PvfEJVOziOeb99s2MuWHzuDhXB","timestamp":1648691699259},{"file_id":"1t-rV8tSLVi_zPTeUDA-CvXHaUCu0jB2x","timestamp":1648435591747}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## **Tópicos especiais em informática**\n","### **Introdução ao Data Science**\n","#### **Python para Data Science**"],"metadata":{"id":"zh8D_93LYJV1"}},{"cell_type":"markdown","source":["##Laços de Repetição\n","\n","É um comando que permite que um bloco de código seja repetido, ou que seja possível percorrer um array (lista ou vetor você escolhe como chamar) e executar os comandos contidos no laço até que seja atingido um critério de parada, enquanto uma condição for verdadeira (teste lógico), ou seja interrompido pelo usuário.\n","\n","### Laço de repetição while\n","O laço de repetição `while` executa um bloco de código enquanto uma condição seja satisfeita, ou até encontrar um comando de parada. O números de vezes que o ocódigo será repetido geralmente não é conhecido. Ex.:\n","\n","```\n","resposta = 'S'\n","while resposta == 'S':\n","  nome=input(\"Digite o nome do aluno: \")\n","  resposta=input(\"Deseja cadastrar um novo aluno: (S/N)\")\n","```\n","O bloco de código apresentado acima será executado enquanto a condição `resposta == 'S' ` for verdadeira.\n"],"metadata":{"id":"znm5eBUFYtjh"}},{"cell_type":"code","source":["#Criando um loop infinito\n","while True:\n","  nome=input(\"Digite o nome do aluno: \")\n","  print(nome)"],"metadata":{"id":"nhKHuoSWDwgr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Interrompendo um loop\n","while True:\n","  nome=input(\"Digite o nome do aluno: \")\n","  print(nome)\n","  if nome == 'Sair':\n","    break"],"metadata":{"id":"fgpDJ6XXHHnq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Retornando para o início do loop\n","while True:\n","  nome=input(\"Digite o nome do aluno: \")\n","  if nome == 'Sair':\n","    break\n","  elif nome == 'Alex':\n","    continue    \n","  print(nome)\n","  "],"metadata":{"id":"9Biahx47Lwed"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Criando um loop com interação do usuário\n","resposta = 'S'\n","while resposta[0].upper() == 'S':\n","  numero=int(input(\"Digite um numero: \"))\n","  print(\"O quadrado do número\",numero,\"é\",numero**2)\n","  resposta=input(\"Deseja informar um novo número: \") \n","  \n","print(\"Programa finalizado.\")"],"metadata":{"id":"7lj2p9XsEM_k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650905774800,"user_tz":180,"elapsed":23174,"user":{"displayName":"Alex Trindade","userId":"04434600472763585498"}},"outputId":"5071df16-63aa-4a77-fa75-e2d87f8d6458"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite um numero: 2\n","O quadrado do número 2 é 4\n","Deseja informar um novo número: S\n","Digite um numero: 4\n","O quadrado do número 4 é 16\n","Deseja informar um novo número: N\n","Programa finalizado.\n"]}]},{"cell_type":"markdown","source":["### Laço de repetição for\n","O laço de repetição `for` executa um bloco de código até que um critério de parada seja atingido. O `for` é utilizado quando o número de vezes que um bloco de código deve ser repetido é conhecido. Ex.: \n","```\n","for x in range(5):\n","  nome=input(\"Digite o nome do aluno: \")\n","```\n","O bloco de código apresentado acima será executado 5 vezes. \n"],"metadata":{"id":"RexTdQ1MGbaR"}},{"cell_type":"code","source":["#Utilizando iterando por um intervalo\n","for i in range(5):\n","  print(i)"],"metadata":{"id":"alKov879Id-O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650905246500,"user_tz":180,"elapsed":9,"user":{"displayName":"Alex Trindade","userId":"04434600472763585498"}},"outputId":"1afcc64c-e9ae-4ab1-ca45-eaf0b5f118be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n"]}]},{"cell_type":"code","source":["#Utilizando for com respost do usuário\n","quantidade = int(input(\"Quantos alunos deseja cadastrar: \"))\n","for x in range(quantidade):\n","  nome=input(\"Digite o nome do Aluno: \")"],"metadata":{"id":"5pobZqIDXGl4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Acumulando valores\n","soma = 0\n","for x in range(1,11):\n","  soma = soma + x\n","print(soma)\n","\n","soma=0\n","for x in range(1,11):\n","  soma += x\n","print(soma)"],"metadata":{"id":"XsiCM-VBXNE5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Percorrendo uma lista - https://gerador-nomes.herokuapp.com/nomes/20\n","lista = [\"Nilo\",\"Ezio\",\"Antero\",\"Ruan\",\"Guiomar\",\n","         \"Hernâni\",\"Manuela\",\"Pérola\",\"Guilherme\",\"Alex\",\n","         \"Alan\",\"Fred\",\"Myriam\",\"Isís\", \"Renata\",\n","         \"Camilo\",\"Fedra\",\"Arina\",\"Simão\",\"Gelson\"]\n","\n","for nome in lista:\n","  print(nome)"],"metadata":{"id":"xrHtzlwTIxLL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650906886234,"user_tz":180,"elapsed":616,"user":{"displayName":"Alex Trindade","userId":"04434600472763585498"}},"outputId":"e7665db1-cf34-4047-da18-67810fe71e25"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nilo\n","Ezio\n","Antero\n","Ruan\n","Guiomar\n","Hernâni\n","Manuela\n","Pérola\n","Guilherme\n","Alex\n","Alan\n","Fred\n","Myriam\n","Isís\n","Renata\n","Camilo\n","Fedra\n","Arina\n","Simão\n","Gelson\n"]}]},{"cell_type":"code","source":["#Interrompendo um laço for\n","lista = [\"Nilo\",\"Ezio\",\"Antero\",\"Ruan\",\"Guiomar\",\n","         \"Hernâni\",\"Manuela\",\"Pérola\",\"Guilherme\",\"Alex\",\n","         \"Alan\",\"Fred\",\"Myriam\",\"Isís\", \"Renata\",\n","         \"Camilo\",\"Fedra\",\"Arina\",\"Simão\",\"Gelson\"]\n","\n","for nome in lista:\n","  if nome == \"Alex\":\n","    break\n","  print(nome)"],"metadata":{"id":"9aLc5NRxLWcN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Capturando o índice da lista\n","lista = [\"Nilo\",\"Ezio\",\"Antero\",\"Ruan\",\"Guiomar\",\n","         \"Hernâni\",\"Manuela\",\"Pérola\",\"Guilherme\",\"Alex\",\n","         \"Alan\",\"Fred\",\"Myriam\",\"Isís\", \"Renata\",\n","         \"Camilo\",\"Fedra\",\"Arina\",\"Simão\",\"Gelson\"]\n","\n","for i, nome in enumerate(lista):\n","  print(i+1,nome)"],"metadata":{"id":"2rxJL8fMNTKh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Percorrendo diversas listas ao mesmo tempo\n","nomes = [\"Nilo\",\"Ezio\",\"Antero\",\"Ruan\",\"Guiomar\",\n","         \"Hernâni\",\"Manuela\",\"Pérola\",\"Guilherme\",\"Alex\",\n","         \"Alan\",\"Fred\",\"Myriam\",\"Isís\", \"Renata\",\n","         \"Camilo\",\"Fedra\",\"Arina\",\"Simão\",\"Gelson\"]\n","apelidos = [\"Madruga\",\"Ximenes\",\"Festas\",\"Noleto\",\"Peçanha\",\n","            \"Cerqueira\",\"Rebimbas\",\"Ornelas\",\"Garcia\",\"Prestes\",\n","            \"Teves\",\"Pimenta\",\"Gois\",\"Atilano\",\"Gameiro\",\n","            \"Melgaço\",\"Cambezes\",\"Aldeia\",\"Quinteiro\",\"Parafita\"]\n","\n","for nome, apelido in zip(nomes, apelidos):\n","  print(\"Nome: \",nome,\"Apelido: \",apelido)"],"metadata":{"id":"eOLP39RVNsaV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Percorrendo diversas listas ao mesmo tempo e utilizando o Índice\n","nomes = [\"Nilo\",\"Ezio\",\"Antero\",\"Ruan\",\"Guiomar\",\n","         \"Hernâni\",\"Manuela\",\"Pérola\",\"Guilherme\",\"Alex\",\n","         \"Alan\",\"Fred\",\"Myriam\",\"Isís\", \"Renata\",\n","         \"Camilo\",\"Fedra\",\"Arina\",\"Simão\",\"Gelson\"]\n","apelidos = [\"Madruga\",\"Ximenes\",\"Festas\",\"Noleto\",\"Peçanha\",\n","            \"Cerqueira\",\"Rebimbas\",\"Ornelas\",\"Garcia\",\"Prestes\",\n","            \"Teves\",\"Pimenta\",\"Gois\",\"Atilano\",\"Gameiro\",\n","            \"Melgaço\",\"Cambezes\",\"Aldeia\",\"Quinteiro\",\"Parafita\"]\n","\n","for i, (nome, apelido) in enumerate(zip(nomes, apelidos)):\n","  print(i+1,\"Nome: \",nome,\"Apelido:\",apelido)"],"metadata":{"id":"5wyd-ppsOh6_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###List Comprehension \n","É uma maneira de construir listas no Python de forma mais rápida."],"metadata":{"id":"2eeVbddrQtvT"}},{"cell_type":"code","source":["#Criando uma lista com os números pares de 0 até 20\n","#Modo iniciante\n","#Modo padawan\n","#modo jedi\n"],"metadata":{"id":"EhMquQxSeCbl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Exercícios\n"],"metadata":{"id":"y6C3G14jVbN4"}},{"cell_type":"markdown","source":["###1. Faça um programa que peça uma nota, entre zero e dez. Mostre uma mensagem caso o valor seja inválido e continue pedindo até que o usuário informe um valor válido."],"metadata":{"id":"kzb0cIrYVgFw"}},{"cell_type":"code","source":[""],"metadata":{"id":"JKHEsMa4VzQS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###2. Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Faça um programa que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento."],"metadata":{"id":"F8iykA_dV0HL"}},{"cell_type":"code","source":[""],"metadata":{"id":"8GkRe2sNWKJm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###3. Faça um programa que leia 5 números e informe o maior número."],"metadata":{"id":"4tTPfrf5X9Hi"}},{"cell_type":"code","source":[""],"metadata":{"id":"dwyZkQMaYKe-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###4. Faça um programa que imprima na tela apenas os números ímpares entre 1 e 50."],"metadata":{"id":"h1DqgRoBZly6"}},{"cell_type":"code","source":[""],"metadata":{"id":"2AGwOh-kZwW3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###5. Faça um programa que peça dois números, base e expoente, calcule e mostre o primeiro número elevado ao segundo número. Não utilize a função de potência da linguagem."],"metadata":{"id":"mocvWFZIZ139"}},{"cell_type":"code","source":[""],"metadata":{"id":"IwGV5hq8Z4EJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###6. Faça um programa que calcule o fatorial de um número inteiro fornecido pelo usuário. Ex.: 5!=5.4.3.2.1=120"],"metadata":{"id":"r3dNUMaeak-G"}},{"cell_type":"code","source":[""],"metadata":{"id":"Im4iZO7tanOs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###7. Faça um programa que calcule o fatorial de um número inteiro fornecido pelo usuário. Ex.: 5!=5.4.3.2.1=120. A saída deve ser conforme o exemplo abaixo:\n","\n","```\n","Fatorial de: 5\n","5! =  5 . 4 . 3 . 2 . 1 = 120\n","```\n","\n"],"metadata":{"id":"N7R6RwdycDcc"}},{"cell_type":"code","source":[""],"metadata":{"id":"GsEI3655cRuH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Referências\n","\n","###SWEIGART, Al. AUTOMATIZANDO TAREFAS MAÇANTES COM PYTON: Programação Prática para verdadeiros iniciantes. São Paulo/SP: Novatec Editora, 2015. "],"metadata":{"id":"60-f-p9sh_61"}}]}