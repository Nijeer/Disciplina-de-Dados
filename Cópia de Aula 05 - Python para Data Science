{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Cópia de Aula 05 - Python para Data Science","provenance":[{"file_id":"1T9e76hsU6wa2FT_vyNWXMMozYEI9_9-8","timestamp":1652656309316},{"file_id":"1kVB4_nAFsWxJtm6ilUJcuP5AdRpyjMPA","timestamp":1650248762623},{"file_id":"1_yvfBeU223S4sPQiBtrxKukANnL9DE71","timestamp":1649031622523},{"file_id":"1hqfMh8PvfEJVOziOeb99s2MuWHzuDhXB","timestamp":1648691699259},{"file_id":"1t-rV8tSLVi_zPTeUDA-CvXHaUCu0jB2x","timestamp":1648435591747}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## **Tópicos especiais em informática**\n","### **Introdução ao Data Science**\n","#### **Python para Data Science**"],"metadata":{"id":"zh8D_93LYJV1"}},{"cell_type":"markdown","source":["##Tuplas\n","\n","\"O tipo de dado tupla (tuple) é quase idêntico ao tipo de dado lista, exceto em\n","relação a dois aspectos. Em primeiro lugar, as tuplas são digitadas com\n","parênteses, isto é, ( e ) no lugar de colchetes, ou seja, [ e ]. Segundo,  As tuplas não podem ter seus valores modificados, adicionados ou removidos\n","\" (SWEIGART, 2015)."],"metadata":{"id":"znm5eBUFYtjh"}},{"cell_type":"code","source":["#Criando uma tupla\n","localizacao = (-6.3404037862582845, -37.75479649318495)\n","print(localizacao)\n","print('Latitude: ',localizacao[0],'Longitude: ',localizacao[1])\n","print(type(localizacao))"],"metadata":{"id":"FC_QiMVm-hdo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Uma tupla não pode ser modificada\n","localizacao[0] = -7.85698"],"metadata":{"id":"8QTRSuJBJ5VE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Converter uma tupla em uma lista\n","lista = list(localizacao)\n","print(lista)\n","type(lista)"],"metadata":{"id":"U3TJOMYlh6ok"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##SETS (Conjuntos)\n","Os conjuntos são uma coleção não ordenada de elementos únicos. Podemos construí-los usando a função set()."],"metadata":{"id":"qEz5rx49igGg"}},{"cell_type":"code","source":["#Criar um conjunto\n","x = set()\n","print(x)\n","type(x)"],"metadata":{"id":"h--JuISujFAo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Adicionar um elemento ao conjunto\n","x.add('Barry')\n","x.add('Nevasca')\n","x.add('Reverso')\n","print(x)"],"metadata":{"id":"pTHviuhdjRpi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x.add('Reverso')\n","print(x)"],"metadata":{"id":"6JYGz0x2geDs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Métodos do set\n","y = set()\n","y.add('Oliver')\n","y.add('Barry')\n","y.add('Felicity')\n","print(y)"],"metadata":{"id":"3ld2TjCAj38J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(y.intersection(x))\n","print(x.difference(y))\n","y.difference_update(x)\n","print(y)"],"metadata":{"id":"pM6srxjliEn0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Operadores de comparação\n","Esses operadores nos permitirão comparar variáveis e produzir um valor booleano (Verdadeiro ou Falso).\n","\n","`==` Igual a. Se os valores de dois operandos forem\n","iguais, a condição torna-se verdadeira.\n","\n","`!=` Diferente de. Se valores de dois operandos não forem\n","iguais, a condição torna-se verdadeira. \n","\n","`< ` Menor que. Se o valor do operando esquerdo for maior\n","que o valor do operando direito, a condição\n","torna-se verdadeira.\n","\n","`> ` Maior que. Se o valor do operando esquerdo for inferior\n","ao valor do operando direito, a condição\n","torna-se verdadeira.\n","\n","`<=` Menor ou igual a. Se o valor do operando esquerdo for inferior\n","ao valor do operando direito, a condição\n","torna-se verdadeira.\n","\n","`>=` Maior ou igual a. Se o valor do operando esquerdo for inferior\n","ao valor do operando direito, a condição\n","torna-se verdadeira.\n"],"metadata":{"id":"cx1Y8oc-lGph"}},{"cell_type":"code","source":["a = 5\n","b = 10\n","\n","print(a == b)\n","print(a != b)\n","print(a > b)\n","print(a < b)\n","print(a >= b)\n","print(a <= b)\n","\n","usuario1 = 'Admin'\n","usuario2 = 'ADMIN'\n","\n","print(usuario1 == usuario2)"],"metadata":{"id":"g1zacPjRnha1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652658439512,"user_tz":180,"elapsed":372,"user":{"displayName":"GABRIEL OLIVEIRA","userId":"09420234970483649461"}},"outputId":"b3ff6317-baf8-48c9-de14-1b61b7640f47"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","True\n","False\n","True\n","False\n","True\n","False\n"]}]},{"cell_type":"code","source":["#Comparacao em cadeia\n","a = 5\n","b = 3\n","c = 7\n","\n","print(a > b > c)\n","print(a > b and b > c)"],"metadata":{"id":"D4hxiqaIojKW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652660182444,"user_tz":180,"elapsed":55,"user":{"displayName":"GABRIEL OLIVEIRA","userId":"09420234970483649461"}},"outputId":"8eec132b-d247-45b9-a64a-d3b9b6a6c3c8"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","False\n"]}]},{"cell_type":"markdown","source":["##Negação de uma expressão lógica\n","O operador `not` altera o resultado de uma comparação."],"metadata":{"id":"XeQLMIcWp5Nh"}},{"cell_type":"code","source":["a = 10\n","b = 2\n","print(a == b)\n","print(not(a == b))"],"metadata":{"id":"VnSEfH7qqM5y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652660243131,"user_tz":180,"elapsed":340,"user":{"displayName":"GABRIEL OLIVEIRA","userId":"09420234970483649461"}},"outputId":"6e96e387-58ba-4c7b-8a69-a50f8c3ee585"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","True\n"]}]},{"cell_type":"markdown","source":["##Desvio condicional - if, elif e else\n","###if\n","Um programa é executado de cima para baixo e da esquerda para direita. Falando explicitamente, uma instrução if pode ser lida como “se (if) esta\n","condição for verdadeira, execute o código que está na cláusula”. Em Python,\n","uma instrução if é constituída das seguintes partes:\n","A palavra chafe if e uma condição seguida de : (dois pontos)."],"metadata":{"id":"xLC4BKcPpKsJ"}},{"cell_type":"code","source":["usuario = input(\"Digite o usuário: \")\n","user = \"Admin\"\n","if usuario == user: # Executa a linha seguinte quando o resultado for verdadeiro\n","  print(\"Seja bem vindo \",usuario)\n","else: # Executa a linha seguinte quando o resultado for falso\n","  print(\"Usuário\",usuario,\"não encontrado!\")"],"metadata":{"id":"fO5GrShdqs90"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###elif\n","Em algum momento vamos precisar testar mais de uma condição, para deixar o código mais limpo utlizamos o elif no lugar de vários if."],"metadata":{"id":"tDv-iqC7rdLu"}},{"cell_type":"code","source":["#Calulo do IMC\n","peso    = float(input(\"Digite seu peso: \"))\n","altura  = float(input(\"Digite sua altura: \"))\n","imc = peso/altura**2\n","print(\"Sem imc é: \",imc)\n","if imc >= 30:\n","  print(\"Obesidade\")\n","elif imc >= 25:\n","  print(\"Sobrepeso\")\n","elif imc >= 18.5:\n","  print(\"Normal\")\n","elif imc <18.5:\n","  print(\"Desnutrido\")"],"metadata":{"id":"d1okeUJQtchZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###else\n","Utilizado para representar uma condição que falta apenas ela ser testada, para evitar usar um teste desnecessário usamos o else. "],"metadata":{"id":"JJYqOhwpt8W5"}},{"cell_type":"markdown","source":["##Referências\n","\n","###SWEIGART, Al. AUTOMATIZANDO TAREFAS MAÇANTES COM PYTON: Programação Prática para verdadeiros iniciantes. São Paulo/SP: Novatec Editora, 2015. "],"metadata":{"id":"60-f-p9sh_61"}}]}